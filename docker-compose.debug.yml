version: "3.8"
networks:
  app-tier:
    name: sso-network
    external: true
services:
  keycloak:
    build:
      dockerfile: Dockerfile
      context: ./keycloak
    image: quay.io/keycloak/keycloak:23.0.7
    container_name: keyCloak
#    restart: always
    depends_on:
      - pgdb
    ports:
      - 8080:8080
      - 8443:8443
    networks:
      - app-tier
    command:
      -v start-dev --import-realm
      #--hostname-strict-https=false --hostname=localhost.com
    environment:
      #Admin Credentials
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: P@ssw0rd
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: P@ssw0rd
      KC_DB: postgres
      KC_DB_URL_HOST: pgdb
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: postgres
      # KC_DB_SCHEMA: public
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      PROXY_ADDRESS_FORWARDING: "true"
    volumes:
#      - ./keyCloak/realms:/opt/keycloak/data/import
      - ./keyCloak/themes:/opt/keycloak/themes
      - ./keyCloak/providers:/opt/keycloak/providers
  pgdb:
    image: postgres
    container_name: pgdb
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - app-tier
    ports:
      - "5432:5432"
#    volumes:
#      - ./pg:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: postgres
  kafka:
    image: "bitnami/kafka:latest"
    container_name: kafka
    restart: always
    networks:
      - app-tier
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
#    volumes:
#      - ./kafka/:/bitnami/kafka
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "kafka-topics.sh --bootstrap-server kafka:9092 --topic hc --create --if-not-exists && kafka-topics.sh --bootstrap-server kafka:9092 --topic hc --describe",
        ]
      interval: 20s
      timeout: 20s
      retries: 5
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8082:8080
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - app-tier